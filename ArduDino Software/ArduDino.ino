/**
 * ARDUINO/C++ SCRIPT FOR THE 'ArduDino' PROJECT.
 * AKSHITH KANDIVANAM.
 * 
 * The main idea for this script is to provide functionality to the IR remote and receiver that is wired up to the breadboard.
 * The IR remote sends a signal to 'jump' or 'duck' to the Python script, which performs the respective action on the dinosaur in the popular 'Dino Game'.
 */
 
// including the IR remote library to access its functions.
#include <IRremote.h>

// code to declare the IR receiever to 'pin #7'.
const int recv_pin = 7;

// code to create a receiver object using the 'IRrecv' function.
IRrecv irrecv(recv_pin);

// code to create a results object using the 'decode_results' function. This will help us in determining the signal sent by the IR remote.
decode_results results;

// creating a variable to store the key hexadecimal code generated by each IR remote button click.
unsigned long key_value = 0;

// SETUP.
void setup() {

  // code to enable the receiver object that was created for the project.
  irrecv.enableIRIn();

  // initializing the serial monitor.
  Serial.begin(9600);

  // changing the serial ports timing to wait for stream data to '0ms'.
  Serial.setTimeout(0);
}

// MAIN-LOOP.
void loop() {

  // creating an if-statement to decode the signal sent from the transmitter, which is the remote. We store the signal in the 'results' variable.
  if (irrecv.decode(&results)){

    // creating an if-statement to check if the results variable is equal to the hexadecimal code from the desired IR remote button.
    if (results.value == 0xFF906F){

      // printing the keyword 'jump' if the condition is met.
      Serial.println("jump");
    }

    // code to store the value as the 'key_value" after the case.
    key_value = results.value;

    // code to allow the receiever to resume for the next data sent through the IR remote (transmitter). 
    irrecv.resume();
    }
  }
